{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","myAvatar.png","About.js","App.js","index.js"],"names":["Navbar","className","to","style","color","backgroundColor","borderRadius","BlogList","blogs","map","blog","id","title","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","BlogDetails","useParams","onClick","NotFound","About","src","logo","alt","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acc177c4.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h1>The Dojo Blog</h1>\r\n      <div className=\"links\">\r\n        <Link to=\"/\" style={{ color: 'white', backgroundColor: '#f1356d', borderRadius: '8px' }}>Home</Link>\r\n        <Link to=\"/create\" style={{ color: 'white', backgroundColor: '#f1356d', borderRadius: '8px' }}>New Blog</Link>\r\n        <Link to=\"/about\" style={{ color: 'white', backgroundColor: '#f1356d', borderRadius: '8px' }}>About</Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n \r\nexport default Navbar;","import { Link } from 'react-router-dom';\r\n\r\nconst BlogList = ({ blogs }) => {\r\n  return (\r\n    <div className=\"blog-list\">\r\n      {blogs.map(blog => (\r\n        <div className=\"blog-preview\" key={blog.id} >\r\n          <Link to={`/blogs/${blog.id}`}>\r\n            <h2>{ blog.title }</h2>\r\n            <p>Written by { blog.author }</p>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default BlogList;","import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n\n    setTimeout(() => {\n      fetch(url, { signal: abortCont.signal })\n        .then(res => {\n          if (!res.ok) { // error coming back from server\n            throw Error('could not fetch the data for that resource');\n          }\n          return res.json();\n        })\n        .then(data => {\n          setIsPending(false);\n          setData(data);\n          setError(null);\n        })\n        .catch(err => {\n          if (err.name === 'AbortError') {\n            console.log('fetch aborted')\n          } else {\n            // auto catches network / connection error\n            setIsPending(false);\n            setError(err.message);\n          }\n        })\n    }, 1000);\n    // abort the fetch\n    return () => abortCont.abort();\n  }, [url])\n\n  return { data, isPending, error };\n}\n\nexport default useFetch;","import BlogList from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n  const { error, isPending, data: blogs } = useFetch('http://localhost:8000/blogs')\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      { error && <div>{ error }</div> }\r\n      { isPending && <div>Loading...</div> }\r\n      { blogs && <BlogList blogs={blogs} /> }\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Home;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [author, setAuthor] = useState('mario');\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const blog = { title, body, author };\r\n\r\n    fetch('http://localhost:8000/blogs/', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      // history.go(-1);\r\n      history.push('/');\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2>Add a New Blog</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Blog title:</label>\r\n        <input\r\n          type=\"text\"\r\n          required\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)} />\r\n        <label>Blog body:</label>\r\n        <textarea\r\n          required\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}>\r\n        </textarea>\r\n        <label>Blog author:</label>\r\n        <select\r\n          value={author}\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n        >\r\n          <option value=\"mario\">mario</option>\r\n          <option value=\"yoshi\">yoshi</option>\r\n          <option value=\"alfaro\">alfaro</option>\r\n          <option value=\"ramiro\">ramiro</option>\r\n        </select>\r\n        <button>Add Blog</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n  const { id } = useParams();\r\n  const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    fetch('http://localhost:8000/blogs/' + blog.id, {\r\n      method: 'DELETE'\r\n    }).then(() => {\r\n      history.push('/');\r\n    }) \r\n  }\r\n\r\n  return (\r\n    <div className=\"blog-details\">\r\n      { isPending && <div>Loading...</div> }\r\n      { error && <div>{ error }</div> }\r\n      { blog && (\r\n        <article>\r\n          <h2>{ blog.title }</h2>\r\n          <p>Written by { blog.author }</p>\r\n          <div>{ blog.body }</div>\r\n          <button onClick={handleClick}>delete</button>\r\n        </article>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\"\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <h2>Sorry</h2>\r\n      <p>That page cannot be found</p>\r\n      <Link to=\"/\">Back to the homepage...</Link>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default NotFound;","export default __webpack_public_path__ + \"static/media/myAvatar.382a6ca2.png\";","import logo from './myAvatar.png';\r\nimport './app.css';\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"About\">\r\n            <header className=\"About-header\">\r\n                <Link to=\"/\">\r\n                    <img src={logo} className=\"About-logo\" alt=\"logo\" />\r\n                    <p className=\"AboutClick\">click on me</p>\r\n                    \r\n                </Link>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\nimport About from './About';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}